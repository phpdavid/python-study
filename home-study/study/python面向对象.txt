面向对象
    类:最重要的作用是封装，最基本的原则：自负责定义和刻画一些东西，不负责执行
    对象：
    关键字 class
        变量两个单词建议用_连接student_say
        类两个单词建议用首字母大写StudentSay
    示例
        # 学生类
        class Student:
            name = ''
            age = 0

            def print_file(self): #这里必须要加self
                print('name:' + self.name)
                print('age:' + str(self.age))


            student = Student()  # 示例中在一个文件，正式环境中不要在一个文件中又定义类，又实例化，调用
            student.print_file()
    方法和函数的区别
        方法和函数没有绝对的区别
        C,C++叫做函数，java，C#叫做方法
        方法是面向对象中的概念，面向对象更加关注的是设计
        函数更多的是面向过程中的概念
        变量在类中的被称作数据成员
    类和对象
        1 类是现实时间或思想世界中的实体在计算机中的反映，它将数据和对数据的操作封装在一起
          类中定义的是类的行为和体征，比如人（类）特征有姓名，年龄，身高等，行为有，说话，走路。
          但是人没有打印的行为，打印是打印机的行为，所以在人（类）中不要有打印的行为。
        2 类是一个群体的共有特征和行为的概括，具体描述一个事物就要用到对象
        3 对象就是描述一个具体的人和事物
    构造函数
        def __init__():实例化类的时候自动执行,但是构造函数可以手动调用，返回none,并且不可以自定义返回值，只能返回none
**  在python中局部变量不会覆盖全局变量
    类变量和实例变量
        类变量是和类相关联的变量
        实例变量是和实例相关联的变量
01.11.11